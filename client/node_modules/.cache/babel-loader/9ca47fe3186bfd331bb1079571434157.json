{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TYP\\\\Project Task\\\\client\\\\src\\\\ComboBos.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction ComboBox() {\n  const top100Films = [{\n    title: 'Monty Python and the Holy Grail',\n    year: 1975\n  }];\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: top100Films,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Combo box\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ComboBox;\nexport default ComboBox; // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n// const [searchedUsers, setSearchedUsers] = useState([]);\n// const users = [\"prasheet\", \"ambesh\", \"prashant\", \"anshul\"];\n// const handleChange = (e) => {\n//     // setUsername(e.target.value) ;\n//     const temp_user = users.filter(user => user.includes(e.target.value));\n//     console.log(temp_user);\n//     setSearchedUsers(temp_user);\n//     if (temp_user.length == 0){\n//         return handleClose() ;\n//     }\n// };\n//         <input onChange={handleChange} placeholder=\"ente username\" />\n\nvar _c;\n\n$RefreshReg$(_c, \"ComboBox\");","map":{"version":3,"sources":["D:/TYP/Project Task/client/src/ComboBos.js"],"names":["React","TextField","Autocomplete","ComboBox","top100Films","title","year","option","width","params"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,SAASC,QAAT,GAAoB;AAEhB,QAAMC,WAAW,GAAG,CAChB;AAAEC,IAAAA,KAAK,EAAE,iCAAT;AAA4CC,IAAAA,IAAI,EAAE;AAAlD,GADgB,CAApB;AAIF,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,OAAO,EAAEF,WAFX;AAGE,IAAA,cAAc,EAAGG,MAAD,IAAYA,MAAM,CAACF,KAHrC;AAIE,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,WAA7B;AAAyC,MAAA,OAAO,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AAL3B;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAfQN,Q;AAiBT,eAAeA,QAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nfunction ComboBox() {\r\n\r\n    const top100Films = [  \r\n        { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n      ];\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={top100Films}\r\n      getOptionLabel={(option) => option.title}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ComboBox;\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\n\r\n// const [searchedUsers, setSearchedUsers] = useState([]);\r\n// const users = [\"prasheet\", \"ambesh\", \"prashant\", \"anshul\"];\r\n// const handleChange = (e) => {\r\n//     // setUsername(e.target.value) ;\r\n//     const temp_user = users.filter(user => user.includes(e.target.value));\r\n//     console.log(temp_user);\r\n//     setSearchedUsers(temp_user);\r\n    \r\n//     if (temp_user.length == 0){\r\n//         return handleClose() ;\r\n//     }\r\n\r\n// };\r\n\r\n\r\n\r\n//         <input onChange={handleChange} placeholder=\"ente username\" />"]},"metadata":{},"sourceType":"module"}